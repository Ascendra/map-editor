#react-entry-point {
    height: 100%;
}

#root {
    display: grid;
    height: 100%;
    grid-template-rows: min-content minmax(0, 1fr) 25px;
    grid-template-columns: 15rem minmax(0, 1fr) 18rem;
    grid-template-areas: 
        "top top top"
        "left center right"
        "left bottom right";
    color: var(--text-color);
}

#root.dragging * {
    user-select: none;
}

#top {
    grid-area: top;
    padding: 1rem;
}

#left {
    grid-area: left;
    display: grid;
    grid-template-rows: 1fr 1fr;
    grid-template-columns: minmax(0, 1fr);
    padding: 1rem;
}

#center {
    grid-area: center;
    background-color: var(--elevation-3-color);
}

#bottom {
    grid-area: bottom;  
    justify-content: end;
    align-items: center;
    padding: 0.25rem 0.5rem;
}

#right {
    grid-area: right;
    display: grid;
    grid-template-rows: minmax(17rem, min-content);
    grid-template-columns: minmax(0, 1fr);
    padding: 1rem;
}

.panel-container {
    border: solid 1px var(--elevation-3-color);
    display: flex;
    gap: 1rem;
    background-color: var(--elevation-2-color);
}

.panel-container.vertical {
    flex-direction: column;
}

.panel-container.horizontal {
    flex-direction: row;
}



.list-item {
    display: flex;
    width: 100%;
    padding: 0.5rem;
    background-color: var(--elevation-2-color);
    border-bottom: 0;
    border-radius: 3px;
    cursor: pointer;
    align-items: center;
    gap: 0.5rem;
}

.list-item:not(.active):hover {
    background-color: var(--elevation-1-color);
}

.list-item.active {
    outline: solid 2px var(--highlight-color);
}

.list-item .label {
    flex-grow: 1;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.list-item .delete-button {
    flex-basis: 0 0 auto;
}



.platforms-panel {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex-grow: 1;
    min-height: 0;
}

.platforms-panel .list-items {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    overflow: auto;
    background-color: var(--elevation-3-color);
    border-radius: 3px;
    gap: 2px;
    padding: 2px;
}



.entities-panel {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex-grow: 1;
    min-height: 0;
}

.entities-panel .list-items {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    overflow: auto;
    background-color: var(--elevation-3-color);
    border-radius: 3px;
    gap: 2px;
    padding: 2px;
}



.map-view-panel {
    padding: 2rem;
    height: 100%;
    overflow: auto;
}

.map-view-panel.pointer {
    cursor: pointer;
}

.map-view-panel canvas {
    box-sizing: content-box;
    background-color: #FFFFFF;
    box-shadow: 0 0 0.25rem 0px #6D6D6D;
}



.details-panel {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.details-panel .details {
    display: grid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
    gap: 1rem;
}

.details-panel .subtitle {
    color: var(--sub-text-color);
    font-size: 0.8rem;
    font-family: monospace;
    margin: 0;
    font-weight: bold;
}



.details-input {
    display: flex;
    flex-direction: column;
    grid-column-start: 1;
    grid-column-end: 3;
    flex: 1 1 auto;
}

.details-input label {
    margin-bottom: 0.1rem;
}

.details-input.left {
    grid-column-start: 1;
    grid-column-end: 2;
}

.details-input.right {
    grid-column-start: 2;
    grid-column-end: 3;
}



@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
} 

.serialization-panel {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.serialization-panel textarea {
    resize: none;
    height: 100%;
    width: 100%;
    color: var(--text-color);
    background-color: var(--elevation-3-color);
    border-color: var(--elevation-3-color);
    padding: 0.5rem;
}

.serialization-panel textarea:focus {
    outline: 2px solid var(--elevation-0-color);
}

.serialization-panel textarea.error {
    border-color: var(--error-color);
    outline-color: var(--error-color);
}

.serialization-panel h2 {
    display: flex;
    height: fit-content;
    align-items: center;
    gap: 0.5rem;
}

.serialization-panel .loading-indicator {
    border: 3px solid var(--sub-text-color);
    border-bottom-color: transparent;
    border-radius: 50%;
    width: 1.2rem;
    height: 1.2rem;
    animation: 1s linear infinite spin;
}

.serialization-panel .error-message {
    color: var(--error-color);
    margin: 0;
    flex: 1 0 auto;
}


.title-panel {
    display: flex;
    align-items: center;
    gap: 2rem;
}

.title-panel .title-input {
    display: flex;
}

.title-panel .size {
    color: var(--sub-text-color);
}